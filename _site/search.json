[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "quarto",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "holoviz.html",
    "href": "holoviz.html",
    "title": "Panel in Quarto Examples",
    "section": "",
    "text": "This is a Panel application embedded in a Quarto doc.\n\nimport panel as pn\n\npn.extension(design=\"material\")\n\nslider = pn.widgets.IntSlider(name=\"Select a value\", value=10, start=0, end=100)\npn.Column(\n    \"# Hello Panel + Quarto!\",\n    pn.rx(\"You selected: {}\").format(slider),\n).embed(states={slider: list(range(0, 12, 1))})"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "holoviz2.html",
    "href": "holoviz2.html",
    "title": "Panel in Quarto Examples",
    "section": "",
    "text": "import hvplot.pandas\nimport numpy as np\nimport pandas as pd\nimport panel as pn\n\nPRIMARY_COLOR = \"#0072B5\"\nSECONDARY_COLOR = \"#B54300\"\nCSV_FILE = (\n    \"https://raw.githubusercontent.com/holoviz/panel/main/examples/assets/occupancy.csv\"\n)\n\n# pn.extension(design=\"material\", sizing_mode=\"stretch_width\")\npn.extension(design=\"material\")\n\n@pn.cache\ndef get_data():\n  return pd.read_csv(CSV_FILE, parse_dates=[\"date\"], index_col=\"date\")\n\ndata = get_data()\n\n# data.tail()\n\ndef transform_data(variable, window, sigma):\n    \"\"\"Calculates the rolling average and identifies outliers\"\"\"\n    avg = data[variable].rolling(window=window).mean()\n    residual = data[variable] - avg\n    std = residual.rolling(window=window).std()\n    outliers = np.abs(residual) &gt; std * sigma\n    return avg, avg[outliers]\n\n\ndef get_plot(variable=\"Temperature\", window=30, sigma=10):\n    \"\"\"Plots the rolling average and the outliers\"\"\"\n    avg, highlight = transform_data(variable, window, sigma)\n    return avg.hvplot(\n        height=300, legend=False, color=PRIMARY_COLOR\n    ) * highlight.hvplot.scatter(color=SECONDARY_COLOR, padding=0.1, legend=False)\n\nget_plot(variable='Temperature', window=20, sigma=10)\n\nvariable_widget = pn.widgets.Select(name=\"variable\", value=\"Temperature\", options=list(data.columns))\nwindow_widget = pn.widgets.IntSlider(name=\"window\", value=30, start=1, end=60)\nsigma_widget = pn.widgets.IntSlider(name=\"sigma\", value=10, start=0, end=20)\n\nbound_plot = pn.bind(\n    get_plot, variable=variable_widget, window=window_widget, sigma=sigma_widget\n)\n\nwidgets = pn.Column(variable_widget, window_widget, sigma_widget, sizing_mode=\"fixed\", width=300)\npn.Column(widgets, bound_plot).embed()\n\n\n# pn.template.MaterialTemplate(\n#     site=\"Panel\",\n#     title=\"Getting Started App\",\n#     sidebar=[variable_widget, window_widget, sigma_widget],\n#     main=[bound_plot],\n# ).servable(); # The ; is needed in the notebook to not display the template. Its not needed in a script"
  }
]